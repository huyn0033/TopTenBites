@model IEnumerable<YelpBusiness>
@using TopTenBites.Web.ApplicationCore.Models
@inject Microsoft.Extensions.Options.IOptions<AppSettingsOptions> _appSettingsOptions

<div id="map" class="@((Model.Count() == 0) ? "d-none":"")"></div>
<script>
    function initMap() {
        @if (Model.Count() > 0) {
        <text>
            let locations = [
                @for(int i = 0; i < Model.Count(); i++) {
                    var b = Model.ElementAt(i);
                    @Html.Raw("{")
                    @Html.Raw("index: " + i.ToString() + ",")
                    @Html.Raw("name: " + "\"" + b.name + "\",")
                    //@Html.Raw("image_url: " + "\"" + b.image_url + "\",")
                    @Html.Raw("coordinates:" + "{ latitude: " + b.coordinates.latitude.ToString() + ", longitude: " + b.coordinates.longitude.ToString() + "}" + ",")
                    @Html.Raw("}")
                    @if (i < Model.Count()-1)
                    {
                        @Html.Raw(",\n")
                    }
                }
            ]

            let options = {
                zoom: 12,
                disableDefaultUI: true,
                scaleControl: true,
                zoomControl: true,
                fullscreenControl: true
            }

            var map = new google.maps.Map(document.getElementById('map'), options);

            placeLocationsOnMap(locations, map);

            function placeLocationsOnMap(locations, map) {
                // Loop through our array of buildings & place each one on the map
                let bounds = new google.maps.LatLngBounds();
                locations.forEach((location, idx) => {
                    let position = new google.maps.LatLng(location.coordinates.latitude, location.coordinates.longitude);//{ lat: location.latitude, lng: location.longitude }
                    // Stretch our bounds to the newly found marker position
                    bounds.extend(position);

                    let marker = new google.maps.Marker({
                        position: position,
                        map: map,
                        title: location.name,
                        label: { text: (idx + 1).toString(), color: "#ffffff" },
                    });

                    //let infoWindow = new google.maps.InfoWindow();
                    //// Allow each marker to have an info window
                    //google.maps.event.addListener(marker, 'click', () => {
                    //    infoWindow.setContent(getContent(location));
                    //    infoWindow.open(map, marker);
                    //})

                    // Automatically center the map fitting all markers on the screen
                    map.fitBounds(bounds);
                })
            }
        </text>
        }
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=@(_appSettingsOptions.Value.GoogleMapsApiKey)&callback=initMap"></script>